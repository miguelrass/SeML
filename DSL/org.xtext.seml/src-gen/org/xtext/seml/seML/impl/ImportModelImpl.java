/**
 * generated by Xtext 2.10.0
 */
package org.xtext.seml.seML.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.xtext.seml.seML.Characteristic;
import org.xtext.seml.seML.Component;
import org.xtext.seml.seML.ImportModel;
import org.xtext.seml.seML.MetaIndividual;
import org.xtext.seml.seML.ObjectProperty;
import org.xtext.seml.seML.SeMLPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Import Model</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.seml.seML.impl.ImportModelImpl#getComponents <em>Components</em>}</li>
 *   <li>{@link org.xtext.seml.seML.impl.ImportModelImpl#getCharacteristics <em>Characteristics</em>}</li>
 *   <li>{@link org.xtext.seml.seML.impl.ImportModelImpl#getObjectProperties <em>Object Properties</em>}</li>
 *   <li>{@link org.xtext.seml.seML.impl.ImportModelImpl#getMetaIndividuals <em>Meta Individuals</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ImportModelImpl extends ModelImpl implements ImportModel
{
  /**
   * The cached value of the '{@link #getComponents() <em>Components</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getComponents()
   * @generated
   * @ordered
   */
  protected EList<Component> components;

  /**
   * The cached value of the '{@link #getCharacteristics() <em>Characteristics</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCharacteristics()
   * @generated
   * @ordered
   */
  protected EList<Characteristic> characteristics;

  /**
   * The cached value of the '{@link #getObjectProperties() <em>Object Properties</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getObjectProperties()
   * @generated
   * @ordered
   */
  protected EList<ObjectProperty> objectProperties;

  /**
   * The cached value of the '{@link #getMetaIndividuals() <em>Meta Individuals</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMetaIndividuals()
   * @generated
   * @ordered
   */
  protected EList<MetaIndividual> metaIndividuals;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ImportModelImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return SeMLPackage.Literals.IMPORT_MODEL;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Component> getComponents()
  {
    if (components == null)
    {
      components = new EObjectContainmentEList<Component>(Component.class, this, SeMLPackage.IMPORT_MODEL__COMPONENTS);
    }
    return components;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Characteristic> getCharacteristics()
  {
    if (characteristics == null)
    {
      characteristics = new EObjectContainmentEList<Characteristic>(Characteristic.class, this, SeMLPackage.IMPORT_MODEL__CHARACTERISTICS);
    }
    return characteristics;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<ObjectProperty> getObjectProperties()
  {
    if (objectProperties == null)
    {
      objectProperties = new EObjectContainmentEList<ObjectProperty>(ObjectProperty.class, this, SeMLPackage.IMPORT_MODEL__OBJECT_PROPERTIES);
    }
    return objectProperties;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<MetaIndividual> getMetaIndividuals()
  {
    if (metaIndividuals == null)
    {
      metaIndividuals = new EObjectContainmentEList<MetaIndividual>(MetaIndividual.class, this, SeMLPackage.IMPORT_MODEL__META_INDIVIDUALS);
    }
    return metaIndividuals;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case SeMLPackage.IMPORT_MODEL__COMPONENTS:
        return ((InternalEList<?>)getComponents()).basicRemove(otherEnd, msgs);
      case SeMLPackage.IMPORT_MODEL__CHARACTERISTICS:
        return ((InternalEList<?>)getCharacteristics()).basicRemove(otherEnd, msgs);
      case SeMLPackage.IMPORT_MODEL__OBJECT_PROPERTIES:
        return ((InternalEList<?>)getObjectProperties()).basicRemove(otherEnd, msgs);
      case SeMLPackage.IMPORT_MODEL__META_INDIVIDUALS:
        return ((InternalEList<?>)getMetaIndividuals()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case SeMLPackage.IMPORT_MODEL__COMPONENTS:
        return getComponents();
      case SeMLPackage.IMPORT_MODEL__CHARACTERISTICS:
        return getCharacteristics();
      case SeMLPackage.IMPORT_MODEL__OBJECT_PROPERTIES:
        return getObjectProperties();
      case SeMLPackage.IMPORT_MODEL__META_INDIVIDUALS:
        return getMetaIndividuals();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case SeMLPackage.IMPORT_MODEL__COMPONENTS:
        getComponents().clear();
        getComponents().addAll((Collection<? extends Component>)newValue);
        return;
      case SeMLPackage.IMPORT_MODEL__CHARACTERISTICS:
        getCharacteristics().clear();
        getCharacteristics().addAll((Collection<? extends Characteristic>)newValue);
        return;
      case SeMLPackage.IMPORT_MODEL__OBJECT_PROPERTIES:
        getObjectProperties().clear();
        getObjectProperties().addAll((Collection<? extends ObjectProperty>)newValue);
        return;
      case SeMLPackage.IMPORT_MODEL__META_INDIVIDUALS:
        getMetaIndividuals().clear();
        getMetaIndividuals().addAll((Collection<? extends MetaIndividual>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case SeMLPackage.IMPORT_MODEL__COMPONENTS:
        getComponents().clear();
        return;
      case SeMLPackage.IMPORT_MODEL__CHARACTERISTICS:
        getCharacteristics().clear();
        return;
      case SeMLPackage.IMPORT_MODEL__OBJECT_PROPERTIES:
        getObjectProperties().clear();
        return;
      case SeMLPackage.IMPORT_MODEL__META_INDIVIDUALS:
        getMetaIndividuals().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case SeMLPackage.IMPORT_MODEL__COMPONENTS:
        return components != null && !components.isEmpty();
      case SeMLPackage.IMPORT_MODEL__CHARACTERISTICS:
        return characteristics != null && !characteristics.isEmpty();
      case SeMLPackage.IMPORT_MODEL__OBJECT_PROPERTIES:
        return objectProperties != null && !objectProperties.isEmpty();
      case SeMLPackage.IMPORT_MODEL__META_INDIVIDUALS:
        return metaIndividuals != null && !metaIndividuals.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //ImportModelImpl
