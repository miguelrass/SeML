/**
 * generated by Xtext 2.11.0
 */
package org.xtext.seml.seML.impl;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

import org.xtext.seml.seML.*;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class SeMLFactoryImpl extends EFactoryImpl implements SeMLFactory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static SeMLFactory init()
  {
    try
    {
      SeMLFactory theSeMLFactory = (SeMLFactory)EPackage.Registry.INSTANCE.getEFactory(SeMLPackage.eNS_URI);
      if (theSeMLFactory != null)
      {
        return theSeMLFactory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new SeMLFactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public SeMLFactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case SeMLPackage.MODEL: return createModel();
      case SeMLPackage.MAIN_MODEL: return createMainModel();
      case SeMLPackage.IMPORT_MODEL: return createImportModel();
      case SeMLPackage.IMPORT: return createImport();
      case SeMLPackage.SENTENCE: return createSentence();
      case SeMLPackage.RELATION: return createRelation();
      case SeMLPackage.ASSIGNMENT: return createAssignment();
      case SeMLPackage.VALUE: return createValue();
      case SeMLPackage.INDIVIDUAL: return createIndividual();
      case SeMLPackage.FREE_INDIVIDUAL: return createFreeIndividual();
      case SeMLPackage.OBJECT_PROPERTY: return createObjectProperty();
      case SeMLPackage.CHARACTERISTIC: return createCharacteristic();
      case SeMLPackage.STATIC_INDIVIDUAL: return createStaticIndividual();
      case SeMLPackage.FLOAT_VAL: return createFloatVal();
      case SeMLPackage.BOOL_VAL: return createBoolVal();
      case SeMLPackage.INT_VAL: return createIntVal();
      case SeMLPackage.STRING_VAL: return createStringVal();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Model createModel()
  {
    ModelImpl model = new ModelImpl();
    return model;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public MainModel createMainModel()
  {
    MainModelImpl mainModel = new MainModelImpl();
    return mainModel;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ImportModel createImportModel()
  {
    ImportModelImpl importModel = new ImportModelImpl();
    return importModel;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Import createImport()
  {
    ImportImpl import_ = new ImportImpl();
    return import_;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Sentence createSentence()
  {
    SentenceImpl sentence = new SentenceImpl();
    return sentence;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Relation createRelation()
  {
    RelationImpl relation = new RelationImpl();
    return relation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Assignment createAssignment()
  {
    AssignmentImpl assignment = new AssignmentImpl();
    return assignment;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Value createValue()
  {
    ValueImpl value = new ValueImpl();
    return value;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Individual createIndividual()
  {
    IndividualImpl individual = new IndividualImpl();
    return individual;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public FreeIndividual createFreeIndividual()
  {
    FreeIndividualImpl freeIndividual = new FreeIndividualImpl();
    return freeIndividual;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ObjectProperty createObjectProperty()
  {
    ObjectPropertyImpl objectProperty = new ObjectPropertyImpl();
    return objectProperty;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Characteristic createCharacteristic()
  {
    CharacteristicImpl characteristic = new CharacteristicImpl();
    return characteristic;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public StaticIndividual createStaticIndividual()
  {
    StaticIndividualImpl staticIndividual = new StaticIndividualImpl();
    return staticIndividual;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public FloatVal createFloatVal()
  {
    FloatValImpl floatVal = new FloatValImpl();
    return floatVal;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public BoolVal createBoolVal()
  {
    BoolValImpl boolVal = new BoolValImpl();
    return boolVal;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public IntVal createIntVal()
  {
    IntValImpl intVal = new IntValImpl();
    return intVal;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public StringVal createStringVal()
  {
    StringValImpl stringVal = new StringValImpl();
    return stringVal;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public SeMLPackage getSeMLPackage()
  {
    return (SeMLPackage)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static SeMLPackage getPackage()
  {
    return SeMLPackage.eINSTANCE;
  }

} //SeMLFactoryImpl
