/**
 * generated by Xtext 2.11.0
 */
package org.xtext.seml.seML.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.emf.ecore.util.EObjectResolvingEList;

import org.xtext.seml.seML.Individual;
import org.xtext.seml.seML.ObjectProperty;
import org.xtext.seml.seML.Relation;
import org.xtext.seml.seML.SeMLPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Relation</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.seml.seML.impl.RelationImpl#getInd1 <em>Ind1</em>}</li>
 *   <li>{@link org.xtext.seml.seML.impl.RelationImpl#getObj <em>Obj</em>}</li>
 *   <li>{@link org.xtext.seml.seML.impl.RelationImpl#getInd2 <em>Ind2</em>}</li>
 * </ul>
 *
 * @generated
 */
public class RelationImpl extends SentenceImpl implements Relation
{
  /**
   * The cached value of the '{@link #getInd1() <em>Ind1</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getInd1()
   * @generated
   * @ordered
   */
  protected Individual ind1;

  /**
   * The cached value of the '{@link #getObj() <em>Obj</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getObj()
   * @generated
   * @ordered
   */
  protected ObjectProperty obj;

  /**
   * The cached value of the '{@link #getInd2() <em>Ind2</em>}' reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getInd2()
   * @generated
   * @ordered
   */
  protected EList<Individual> ind2;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected RelationImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return SeMLPackage.Literals.RELATION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Individual getInd1()
  {
    if (ind1 != null && ind1.eIsProxy())
    {
      InternalEObject oldInd1 = (InternalEObject)ind1;
      ind1 = (Individual)eResolveProxy(oldInd1);
      if (ind1 != oldInd1)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, SeMLPackage.RELATION__IND1, oldInd1, ind1));
      }
    }
    return ind1;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Individual basicGetInd1()
  {
    return ind1;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setInd1(Individual newInd1)
  {
    Individual oldInd1 = ind1;
    ind1 = newInd1;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SeMLPackage.RELATION__IND1, oldInd1, ind1));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ObjectProperty getObj()
  {
    if (obj != null && obj.eIsProxy())
    {
      InternalEObject oldObj = (InternalEObject)obj;
      obj = (ObjectProperty)eResolveProxy(oldObj);
      if (obj != oldObj)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, SeMLPackage.RELATION__OBJ, oldObj, obj));
      }
    }
    return obj;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ObjectProperty basicGetObj()
  {
    return obj;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setObj(ObjectProperty newObj)
  {
    ObjectProperty oldObj = obj;
    obj = newObj;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SeMLPackage.RELATION__OBJ, oldObj, obj));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Individual> getInd2()
  {
    if (ind2 == null)
    {
      ind2 = new EObjectResolvingEList<Individual>(Individual.class, this, SeMLPackage.RELATION__IND2);
    }
    return ind2;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case SeMLPackage.RELATION__IND1:
        if (resolve) return getInd1();
        return basicGetInd1();
      case SeMLPackage.RELATION__OBJ:
        if (resolve) return getObj();
        return basicGetObj();
      case SeMLPackage.RELATION__IND2:
        return getInd2();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case SeMLPackage.RELATION__IND1:
        setInd1((Individual)newValue);
        return;
      case SeMLPackage.RELATION__OBJ:
        setObj((ObjectProperty)newValue);
        return;
      case SeMLPackage.RELATION__IND2:
        getInd2().clear();
        getInd2().addAll((Collection<? extends Individual>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case SeMLPackage.RELATION__IND1:
        setInd1((Individual)null);
        return;
      case SeMLPackage.RELATION__OBJ:
        setObj((ObjectProperty)null);
        return;
      case SeMLPackage.RELATION__IND2:
        getInd2().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case SeMLPackage.RELATION__IND1:
        return ind1 != null;
      case SeMLPackage.RELATION__OBJ:
        return obj != null;
      case SeMLPackage.RELATION__IND2:
        return ind2 != null && !ind2.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //RelationImpl
