/*
 * generated by Xtext 2.11.0
 */
grammar InternalSeML;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.seml.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.seml.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.seml.services.SeMLGrammarAccess;

}

@parser::members {

 	private SeMLGrammarAccess grammarAccess;

    public InternalSeMLParser(TokenStream input, SeMLGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected SeMLGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getModelAccess().getMainModelParserRuleCall_0());
		}
		this_MainModel_0=ruleMainModel
		{
			$current = $this_MainModel_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getModelAccess().getImportModelParserRuleCall_1());
		}
		this_ImportModel_1=ruleImportModel
		{
			$current = $this_ImportModel_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleMainModel
entryRuleMainModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMainModelRule()); }
	iv_ruleMainModel=ruleMainModel
	{ $current=$iv_ruleMainModel.current; }
	EOF;

// Rule MainModel
ruleMainModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getMainModelAccess().getImportsImportParserRuleCall_0_0());
				}
				lv_imports_0_0=ruleImport
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMainModelRule());
					}
					add(
						$current,
						"imports",
						lv_imports_0_0,
						"org.xtext.seml.SeML.Import");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		(
			otherlv_1='use'
			{
				newLeafNode(otherlv_1, grammarAccess.getMainModelAccess().getUseKeyword_1_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getMainModelRule());
						}
					}
					otherlv_2=RULE_ALIAS
					{
						newLeafNode(otherlv_2, grammarAccess.getMainModelAccess().getUseChCharacteristicCrossReference_1_1_0());
					}
				)
			)
			(
				otherlv_3=','
				{
					newLeafNode(otherlv_3, grammarAccess.getMainModelAccess().getCommaKeyword_1_2_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getMainModelRule());
							}
						}
						otherlv_4=RULE_ALIAS
						{
							newLeafNode(otherlv_4, grammarAccess.getMainModelAccess().getUseChCharacteristicCrossReference_1_2_1_0());
						}
					)
				)
			)*
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getMainModelAccess().getSentencesSentenceParserRuleCall_2_0());
				}
				lv_sentences_5_0=ruleSentence
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMainModelRule());
					}
					add(
						$current,
						"sentences",
						lv_sentences_5_0,
						"org.xtext.seml.SeML.Sentence");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleImportModel
entryRuleImportModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImportModelRule()); }
	iv_ruleImportModel=ruleImportModel
	{ $current=$iv_ruleImportModel.current; }
	EOF;

// Rule ImportModel
ruleImportModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getImportModelAccess().getStaticIndividualsStaticIndividualParserRuleCall_0_0());
				}
				lv_staticIndividuals_0_0=ruleStaticIndividual
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getImportModelRule());
					}
					add(
						$current,
						"staticIndividuals",
						lv_staticIndividuals_0_0,
						"org.xtext.seml.SeML.StaticIndividual");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		(
			(
				{
					newCompositeNode(grammarAccess.getImportModelAccess().getIndividualOptionsFreeIndividualParserRuleCall_1_0());
				}
				lv_individualOptions_1_0=ruleFreeIndividual
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getImportModelRule());
					}
					add(
						$current,
						"individualOptions",
						lv_individualOptions_1_0,
						"org.xtext.seml.SeML.FreeIndividual");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getImportModelAccess().getCharacteristicsCharacteristicParserRuleCall_2_0());
				}
				lv_characteristics_2_0=ruleCharacteristic
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getImportModelRule());
					}
					add(
						$current,
						"characteristics",
						lv_characteristics_2_0,
						"org.xtext.seml.SeML.Characteristic");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getImportModelAccess().getObjectPropertiesObjectPropertyParserRuleCall_3_0());
				}
				lv_objectProperties_3_0=ruleObjectProperty
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getImportModelRule());
					}
					add(
						$current,
						"objectProperties",
						lv_objectProperties_3_0,
						"org.xtext.seml.SeML.ObjectProperty");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleImport
entryRuleImport returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImportRule()); }
	iv_ruleImport=ruleImport
	{ $current=$iv_ruleImport.current; }
	EOF;

// Rule Import
ruleImport returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='import'
		{
			newLeafNode(otherlv_0, grammarAccess.getImportAccess().getImportKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_STRING
				{
					newLeafNode(lv_name_1_0, grammarAccess.getImportAccess().getNameSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getImportRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.xtext.seml.SeML.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleSentence
entryRuleSentence returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSentenceRule()); }
	iv_ruleSentence=ruleSentence
	{ $current=$iv_ruleSentence.current; }
	EOF;

// Rule Sentence
ruleSentence returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getSentenceAccess().getRelationParserRuleCall_0());
		}
		this_Relation_0=ruleRelation
		{
			$current = $this_Relation_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSentenceAccess().getAssignmentParserRuleCall_1());
		}
		this_Assignment_1=ruleAssignment
		{
			$current = $this_Assignment_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleRelation
entryRuleRelation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRelationRule()); }
	iv_ruleRelation=ruleRelation
	{ $current=$iv_ruleRelation.current; }
	EOF;

// Rule Relation
ruleRelation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRelationRule());
					}
				}
				otherlv_0=RULE_ALIAS
				{
					newLeafNode(otherlv_0, grammarAccess.getRelationAccess().getInd1IndividualCrossReference_0_0());
				}
			)
		)
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRelationRule());
					}
				}
				otherlv_1=RULE_ALIAS
				{
					newLeafNode(otherlv_1, grammarAccess.getRelationAccess().getObjObjectPropertyCrossReference_1_0());
				}
			)
		)
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRelationRule());
					}
				}
				otherlv_2=RULE_ALIAS
				{
					newLeafNode(otherlv_2, grammarAccess.getRelationAccess().getInd2IndividualCrossReference_2_0());
				}
			)
		)
		(
			otherlv_3=','
			{
				newLeafNode(otherlv_3, grammarAccess.getRelationAccess().getCommaKeyword_3_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getRelationRule());
						}
					}
					otherlv_4=RULE_ALIAS
					{
						newLeafNode(otherlv_4, grammarAccess.getRelationAccess().getInd2IndividualCrossReference_3_1_0());
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleAssignment
entryRuleAssignment returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAssignmentRule()); }
	iv_ruleAssignment=ruleAssignment
	{ $current=$iv_ruleAssignment.current; }
	EOF;

// Rule Assignment
ruleAssignment returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAssignmentRule());
					}
				}
				otherlv_0=RULE_ALIAS
				{
					newLeafNode(otherlv_0, grammarAccess.getAssignmentAccess().getIndIndividualCrossReference_0_0());
				}
			)
		)
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getAssignmentAccess().getEqualsSignKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAssignmentAccess().getLiteralValueParserRuleCall_2_0());
				}
				lv_literal_2_0=ruleValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAssignmentRule());
					}
					set(
						$current,
						"literal",
						lv_literal_2_0,
						"org.xtext.seml.SeML.Value");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleValue
entryRuleValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getValueRule()); }
	iv_ruleValue=ruleValue
	{ $current=$iv_ruleValue.current; }
	EOF;

// Rule Value
ruleValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getValueAccess().getFloatValAction_0_0(),
						$current);
				}
			)
			(
				(
					lv_val_1_0=RULE_FLOAT
					{
						newLeafNode(lv_val_1_0, grammarAccess.getValueAccess().getValFLOATTerminalRuleCall_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getValueRule());
						}
						setWithLastConsumed(
							$current,
							"val",
							lv_val_1_0,
							"org.xtext.seml.SeML.FLOAT");
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getValueAccess().getBoolValAction_1_0(),
						$current);
				}
			)
			(
				(
					lv_val_3_0=RULE_BOOL
					{
						newLeafNode(lv_val_3_0, grammarAccess.getValueAccess().getValBOOLTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getValueRule());
						}
						setWithLastConsumed(
							$current,
							"val",
							lv_val_3_0,
							"org.xtext.seml.SeML.BOOL");
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getValueAccess().getIntValAction_2_0(),
						$current);
				}
			)
			(
				(
					lv_val_5_0=RULE_INT
					{
						newLeafNode(lv_val_5_0, grammarAccess.getValueAccess().getValINTTerminalRuleCall_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getValueRule());
						}
						setWithLastConsumed(
							$current,
							"val",
							lv_val_5_0,
							"org.xtext.seml.SeML.INT");
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getValueAccess().getStringValAction_3_0(),
						$current);
				}
			)
			(
				(
					lv_val_7_0=RULE_STRING
					{
						newLeafNode(lv_val_7_0, grammarAccess.getValueAccess().getValSTRINGTerminalRuleCall_3_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getValueRule());
						}
						setWithLastConsumed(
							$current,
							"val",
							lv_val_7_0,
							"org.xtext.seml.SeML.STRING");
					}
				)
			)
		)
	)
;

// Entry rule entryRuleFreeIndividual
entryRuleFreeIndividual returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFreeIndividualRule()); }
	iv_ruleFreeIndividual=ruleFreeIndividual
	{ $current=$iv_ruleFreeIndividual.current; }
	EOF;

// Rule FreeIndividual
ruleFreeIndividual returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='FreeIndividual'
		{
			newLeafNode(otherlv_0, grammarAccess.getFreeIndividualAccess().getFreeIndividualKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ALIAS
				{
					newLeafNode(lv_name_1_0, grammarAccess.getFreeIndividualAccess().getNameALIASTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFreeIndividualRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.xtext.seml.SeML.ALIAS");
				}
			)
		)
		(
			(
				lv_iri_2_0=RULE_STRING
				{
					newLeafNode(lv_iri_2_0, grammarAccess.getFreeIndividualAccess().getIriSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFreeIndividualRule());
					}
					setWithLastConsumed(
						$current,
						"iri",
						lv_iri_2_0,
						"org.xtext.seml.SeML.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleObjectProperty
entryRuleObjectProperty returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getObjectPropertyRule()); }
	iv_ruleObjectProperty=ruleObjectProperty
	{ $current=$iv_ruleObjectProperty.current; }
	EOF;

// Rule ObjectProperty
ruleObjectProperty returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='ObjectProperty'
		{
			newLeafNode(otherlv_0, grammarAccess.getObjectPropertyAccess().getObjectPropertyKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ALIAS
				{
					newLeafNode(lv_name_1_0, grammarAccess.getObjectPropertyAccess().getNameALIASTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getObjectPropertyRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.xtext.seml.SeML.ALIAS");
				}
			)
		)
		(
			(
				lv_iri_2_0=RULE_STRING
				{
					newLeafNode(lv_iri_2_0, grammarAccess.getObjectPropertyAccess().getIriSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getObjectPropertyRule());
					}
					setWithLastConsumed(
						$current,
						"iri",
						lv_iri_2_0,
						"org.xtext.seml.SeML.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleCharacteristic
entryRuleCharacteristic returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCharacteristicRule()); }
	iv_ruleCharacteristic=ruleCharacteristic
	{ $current=$iv_ruleCharacteristic.current; }
	EOF;

// Rule Characteristic
ruleCharacteristic returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Characteristic'
		{
			newLeafNode(otherlv_0, grammarAccess.getCharacteristicAccess().getCharacteristicKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ALIAS
				{
					newLeafNode(lv_name_1_0, grammarAccess.getCharacteristicAccess().getNameALIASTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCharacteristicRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.xtext.seml.SeML.ALIAS");
				}
			)
		)
		(
			(
				lv_iri_2_0=RULE_STRING
				{
					newLeafNode(lv_iri_2_0, grammarAccess.getCharacteristicAccess().getIriSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCharacteristicRule());
					}
					setWithLastConsumed(
						$current,
						"iri",
						lv_iri_2_0,
						"org.xtext.seml.SeML.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleStaticIndividual
entryRuleStaticIndividual returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStaticIndividualRule()); }
	iv_ruleStaticIndividual=ruleStaticIndividual
	{ $current=$iv_ruleStaticIndividual.current; }
	EOF;

// Rule StaticIndividual
ruleStaticIndividual returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='StaticIndividual'
		{
			newLeafNode(otherlv_0, grammarAccess.getStaticIndividualAccess().getStaticIndividualKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ALIAS
				{
					newLeafNode(lv_name_1_0, grammarAccess.getStaticIndividualAccess().getNameALIASTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStaticIndividualRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.xtext.seml.SeML.ALIAS");
				}
			)
		)
		(
			(
				lv_iri_2_0=RULE_STRING
				{
					newLeafNode(lv_iri_2_0, grammarAccess.getStaticIndividualAccess().getIriSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStaticIndividualRule());
					}
					setWithLastConsumed(
						$current,
						"iri",
						lv_iri_2_0,
						"org.xtext.seml.SeML.STRING");
				}
			)
		)
	)
;

RULE_FLOAT : RULE_INT '.' ('0'..'9')+ (('e'|'E') RULE_INT)?;

RULE_BOOL : ('true'|'false');

RULE_INT : '-'? ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_ALIAS : '-'? ('A'..'Z'|'a'..'z'|'*'|'_'|'.') ('A'..'Z'|'a'..'z'|'0'..'9'|'-'|'*'|'_'|'.')*;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
