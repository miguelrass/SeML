/*
 * generated by Xtext 2.10.0
 */
grammar InternalSeML;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.seml.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.seml.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.seml.services.SeMLGrammarAccess;

}

@parser::members {

 	private SeMLGrammarAccess grammarAccess;

    public InternalSeMLParser(TokenStream input, SeMLGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected SeMLGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getModelAccess().getMainModelParserRuleCall_0());
		}
		this_MainModel_0=ruleMainModel
		{
			$current = $this_MainModel_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getModelAccess().getImportModelParserRuleCall_1());
		}
		this_ImportModel_1=ruleImportModel
		{
			$current = $this_ImportModel_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleMainModel
entryRuleMainModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMainModelRule()); }
	iv_ruleMainModel=ruleMainModel
	{ $current=$iv_ruleMainModel.current; }
	EOF;

// Rule MainModel
ruleMainModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getMainModelAccess().getImportsImportParserRuleCall_0_0());
				}
				lv_imports_0_0=ruleImport
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMainModelRule());
					}
					add(
						$current,
						"imports",
						lv_imports_0_0,
						"org.xtext.seml.SeML.Import");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		(
			(
				{
					newCompositeNode(grammarAccess.getMainModelAccess().getSentencesSentenceParserRuleCall_1_0());
				}
				lv_sentences_1_0=ruleSentence
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMainModelRule());
					}
					add(
						$current,
						"sentences",
						lv_sentences_1_0,
						"org.xtext.seml.SeML.Sentence");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleImportModel
entryRuleImportModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImportModelRule()); }
	iv_ruleImportModel=ruleImportModel
	{ $current=$iv_ruleImportModel.current; }
	EOF;

// Rule ImportModel
ruleImportModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getImportModelAccess().getComponentsComponentParserRuleCall_0_0());
				}
				lv_components_0_0=ruleComponent
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getImportModelRule());
					}
					add(
						$current,
						"components",
						lv_components_0_0,
						"org.xtext.seml.SeML.Component");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		(
			(
				{
					newCompositeNode(grammarAccess.getImportModelAccess().getCharacteristicsCharacteristicParserRuleCall_1_0());
				}
				lv_characteristics_1_0=ruleCharacteristic
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getImportModelRule());
					}
					add(
						$current,
						"characteristics",
						lv_characteristics_1_0,
						"org.xtext.seml.SeML.Characteristic");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getImportModelAccess().getObjectPropertiesObjectPropertyParserRuleCall_2_0());
				}
				lv_objectProperties_2_0=ruleObjectProperty
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getImportModelRule());
					}
					add(
						$current,
						"objectProperties",
						lv_objectProperties_2_0,
						"org.xtext.seml.SeML.ObjectProperty");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getImportModelAccess().getMetaIndividualsMetaIndividualParserRuleCall_3_0());
				}
				lv_metaIndividuals_3_0=ruleMetaIndividual
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getImportModelRule());
					}
					add(
						$current,
						"metaIndividuals",
						lv_metaIndividuals_3_0,
						"org.xtext.seml.SeML.MetaIndividual");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleImport
entryRuleImport returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImportRule()); }
	iv_ruleImport=ruleImport
	{ $current=$iv_ruleImport.current; }
	EOF;

// Rule Import
ruleImport returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='import'
		{
			newLeafNode(otherlv_0, grammarAccess.getImportAccess().getImportKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_STRING
				{
					newLeafNode(lv_name_1_0, grammarAccess.getImportAccess().getNameSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getImportRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.xtext.seml.SeML.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleSentence
entryRuleSentence returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSentenceRule()); }
	iv_ruleSentence=ruleSentence
	{ $current=$iv_ruleSentence.current; }
	EOF;

// Rule Sentence
ruleSentence returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getSentenceAccess().getIndividualParserRuleCall_0());
		}
		this_Individual_0=ruleIndividual
		{
			$current = $this_Individual_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSentenceAccess().getRelationParserRuleCall_1());
		}
		this_Relation_1=ruleRelation
		{
			$current = $this_Relation_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSentenceAccess().getUseCharacteristicParserRuleCall_2());
		}
		this_UseCharacteristic_2=ruleUseCharacteristic
		{
			$current = $this_UseCharacteristic_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleIndividual
entryRuleIndividual returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIndividualRule()); }
	iv_ruleIndividual=ruleIndividual
	{ $current=$iv_ruleIndividual.current; }
	EOF;

// Rule Individual
ruleIndividual returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='new'
		{
			newLeafNode(otherlv_0, grammarAccess.getIndividualAccess().getNewKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getIndividualRule());
					}
				}
				otherlv_1=RULE_IRI
				{
					newLeafNode(otherlv_1, grammarAccess.getIndividualAccess().getClsComponentCrossReference_1_0());
				}
			)
		)
		(
			otherlv_2=','
			{
				newLeafNode(otherlv_2, grammarAccess.getIndividualAccess().getCommaKeyword_2_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getIndividualRule());
						}
					}
					otherlv_3=RULE_IRI
					{
						newLeafNode(otherlv_3, grammarAccess.getIndividualAccess().getClsComponentCrossReference_2_1_0());
					}
				)
			)
		)*
		(
			(
				lv_name_4_0=RULE_IRI
				{
					newLeafNode(lv_name_4_0, grammarAccess.getIndividualAccess().getNameIRITerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getIndividualRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_4_0,
						"org.xtext.seml.SeML.IRI");
				}
			)
		)
	)
;

// Entry rule entryRuleUseCharacteristic
entryRuleUseCharacteristic returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUseCharacteristicRule()); }
	iv_ruleUseCharacteristic=ruleUseCharacteristic
	{ $current=$iv_ruleUseCharacteristic.current; }
	EOF;

// Rule UseCharacteristic
ruleUseCharacteristic returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='use'
		{
			newLeafNode(otherlv_0, grammarAccess.getUseCharacteristicAccess().getUseKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getUseCharacteristicRule());
					}
				}
				otherlv_1=RULE_IRI
				{
					newLeafNode(otherlv_1, grammarAccess.getUseCharacteristicAccess().getNameCharacteristicCrossReference_1_0());
				}
			)
		)
	)
;

// Entry rule entryRuleRelation
entryRuleRelation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRelationRule()); }
	iv_ruleRelation=ruleRelation
	{ $current=$iv_ruleRelation.current; }
	EOF;

// Rule Relation
ruleRelation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRelationRule());
					}
				}
				otherlv_0=RULE_IRI
				{
					newLeafNode(otherlv_0, grammarAccess.getRelationAccess().getInstance1AnyIndividualCrossReference_0_0());
				}
			)
		)
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRelationRule());
					}
				}
				otherlv_1=RULE_IRI
				{
					newLeafNode(otherlv_1, grammarAccess.getRelationAccess().getObjObjectPropertyCrossReference_1_0());
				}
			)
		)
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRelationRule());
					}
				}
				otherlv_2=RULE_IRI
				{
					newLeafNode(otherlv_2, grammarAccess.getRelationAccess().getInstance2AnyIndividualCrossReference_2_0());
				}
			)
		)
	)
;

// Entry rule entryRuleComponent
entryRuleComponent returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComponentRule()); }
	iv_ruleComponent=ruleComponent
	{ $current=$iv_ruleComponent.current; }
	EOF;

// Rule Component
ruleComponent returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getComponentAccess().getComponent_ProcessParserRuleCall_0());
		}
		this_Component_Process_0=ruleComponent_Process
		{
			$current = $this_Component_Process_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getComponentAccess().getComponent_EventParserRuleCall_1());
		}
		this_Component_Event_1=ruleComponent_Event
		{
			$current = $this_Component_Event_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getComponentAccess().getComponent_PropertyParserRuleCall_2());
		}
		this_Component_Property_2=ruleComponent_Property
		{
			$current = $this_Component_Property_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getComponentAccess().getComponent_EntityParserRuleCall_3());
		}
		this_Component_Entity_3=ruleComponent_Entity
		{
			$current = $this_Component_Entity_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleComponent_Process
entryRuleComponent_Process returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComponent_ProcessRule()); }
	iv_ruleComponent_Process=ruleComponent_Process
	{ $current=$iv_ruleComponent_Process.current; }
	EOF;

// Rule Component_Process
ruleComponent_Process returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='CompProcess'
		{
			newLeafNode(otherlv_0, grammarAccess.getComponent_ProcessAccess().getCompProcessKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_IRI
				{
					newLeafNode(lv_name_1_0, grammarAccess.getComponent_ProcessAccess().getNameIRITerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getComponent_ProcessRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.xtext.seml.SeML.IRI");
				}
			)
		)
		(
			(
				lv_iri_2_0=RULE_STRING
				{
					newLeafNode(lv_iri_2_0, grammarAccess.getComponent_ProcessAccess().getIriSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getComponent_ProcessRule());
					}
					setWithLastConsumed(
						$current,
						"iri",
						lv_iri_2_0,
						"org.xtext.seml.SeML.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleComponent_Event
entryRuleComponent_Event returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComponent_EventRule()); }
	iv_ruleComponent_Event=ruleComponent_Event
	{ $current=$iv_ruleComponent_Event.current; }
	EOF;

// Rule Component_Event
ruleComponent_Event returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='CompEvent'
		{
			newLeafNode(otherlv_0, grammarAccess.getComponent_EventAccess().getCompEventKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_IRI
				{
					newLeafNode(lv_name_1_0, grammarAccess.getComponent_EventAccess().getNameIRITerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getComponent_EventRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.xtext.seml.SeML.IRI");
				}
			)
		)
		(
			(
				lv_iri_2_0=RULE_STRING
				{
					newLeafNode(lv_iri_2_0, grammarAccess.getComponent_EventAccess().getIriSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getComponent_EventRule());
					}
					setWithLastConsumed(
						$current,
						"iri",
						lv_iri_2_0,
						"org.xtext.seml.SeML.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleComponent_Property
entryRuleComponent_Property returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComponent_PropertyRule()); }
	iv_ruleComponent_Property=ruleComponent_Property
	{ $current=$iv_ruleComponent_Property.current; }
	EOF;

// Rule Component_Property
ruleComponent_Property returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='CompProperty'
		{
			newLeafNode(otherlv_0, grammarAccess.getComponent_PropertyAccess().getCompPropertyKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_IRI
				{
					newLeafNode(lv_name_1_0, grammarAccess.getComponent_PropertyAccess().getNameIRITerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getComponent_PropertyRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.xtext.seml.SeML.IRI");
				}
			)
		)
		(
			(
				lv_iri_2_0=RULE_STRING
				{
					newLeafNode(lv_iri_2_0, grammarAccess.getComponent_PropertyAccess().getIriSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getComponent_PropertyRule());
					}
					setWithLastConsumed(
						$current,
						"iri",
						lv_iri_2_0,
						"org.xtext.seml.SeML.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleComponent_Entity
entryRuleComponent_Entity returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComponent_EntityRule()); }
	iv_ruleComponent_Entity=ruleComponent_Entity
	{ $current=$iv_ruleComponent_Entity.current; }
	EOF;

// Rule Component_Entity
ruleComponent_Entity returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='CompEntity'
		{
			newLeafNode(otherlv_0, grammarAccess.getComponent_EntityAccess().getCompEntityKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_IRI
				{
					newLeafNode(lv_name_1_0, grammarAccess.getComponent_EntityAccess().getNameIRITerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getComponent_EntityRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.xtext.seml.SeML.IRI");
				}
			)
		)
		(
			(
				lv_iri_2_0=RULE_STRING
				{
					newLeafNode(lv_iri_2_0, grammarAccess.getComponent_EntityAccess().getIriSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getComponent_EntityRule());
					}
					setWithLastConsumed(
						$current,
						"iri",
						lv_iri_2_0,
						"org.xtext.seml.SeML.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleObjectProperty
entryRuleObjectProperty returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getObjectPropertyRule()); }
	iv_ruleObjectProperty=ruleObjectProperty
	{ $current=$iv_ruleObjectProperty.current; }
	EOF;

// Rule ObjectProperty
ruleObjectProperty returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='ObjectProperty'
		{
			newLeafNode(otherlv_0, grammarAccess.getObjectPropertyAccess().getObjectPropertyKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_IRI
				{
					newLeafNode(lv_name_1_0, grammarAccess.getObjectPropertyAccess().getNameIRITerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getObjectPropertyRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.xtext.seml.SeML.IRI");
				}
			)
		)
		(
			(
				lv_iri_2_0=RULE_STRING
				{
					newLeafNode(lv_iri_2_0, grammarAccess.getObjectPropertyAccess().getIriSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getObjectPropertyRule());
					}
					setWithLastConsumed(
						$current,
						"iri",
						lv_iri_2_0,
						"org.xtext.seml.SeML.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleCharacteristic
entryRuleCharacteristic returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCharacteristicRule()); }
	iv_ruleCharacteristic=ruleCharacteristic
	{ $current=$iv_ruleCharacteristic.current; }
	EOF;

// Rule Characteristic
ruleCharacteristic returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Characteristic'
		{
			newLeafNode(otherlv_0, grammarAccess.getCharacteristicAccess().getCharacteristicKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_IRI
				{
					newLeafNode(lv_name_1_0, grammarAccess.getCharacteristicAccess().getNameIRITerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCharacteristicRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.xtext.seml.SeML.IRI");
				}
			)
		)
		(
			(
				lv_iri_2_0=RULE_STRING
				{
					newLeafNode(lv_iri_2_0, grammarAccess.getCharacteristicAccess().getIriSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCharacteristicRule());
					}
					setWithLastConsumed(
						$current,
						"iri",
						lv_iri_2_0,
						"org.xtext.seml.SeML.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleMetaIndividual
entryRuleMetaIndividual returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMetaIndividualRule()); }
	iv_ruleMetaIndividual=ruleMetaIndividual
	{ $current=$iv_ruleMetaIndividual.current; }
	EOF;

// Rule MetaIndividual
ruleMetaIndividual returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='MetaIndividual'
		{
			newLeafNode(otherlv_0, grammarAccess.getMetaIndividualAccess().getMetaIndividualKeyword_0());
		}
		(
			(
				lv_cls_1_0=RULE_STRING
				{
					newLeafNode(lv_cls_1_0, grammarAccess.getMetaIndividualAccess().getClsSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMetaIndividualRule());
					}
					addWithLastConsumed(
						$current,
						"cls",
						lv_cls_1_0,
						"org.xtext.seml.SeML.STRING");
				}
			)
		)+
		(
			(
				lv_name_2_0=RULE_IRI
				{
					newLeafNode(lv_name_2_0, grammarAccess.getMetaIndividualAccess().getNameIRITerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMetaIndividualRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.xtext.seml.SeML.IRI");
				}
			)
		)
		(
			(
				lv_iri_3_0=RULE_STRING
				{
					newLeafNode(lv_iri_3_0, grammarAccess.getMetaIndividualAccess().getIriSTRINGTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMetaIndividualRule());
					}
					setWithLastConsumed(
						$current,
						"iri",
						lv_iri_3_0,
						"org.xtext.seml.SeML.STRING");
				}
			)
		)
	)
;

RULE_FLOAT : RULE_INT '.' RULE_INT (('e'|'E') RULE_INT)?;

RULE_BOOL : ('true'|'false');

fragment RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_IRI : ('#'|'&'..'+'|'-'..'.'|'0'..';'|'?'..'Z'|'a'..'z'|'_')+;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
