/*
 * generated by Xtext 2.11.0
 */
grammar InternalSeML;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtext.seml.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.seml.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.seml.services.SeMLGrammarAccess;

}
@parser::members {
	private SeMLGrammarAccess grammarAccess;

	public void setGrammarAccess(SeMLGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getAlternatives()); }
		(rule__Model__Alternatives)
		{ after(grammarAccess.getModelAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMainModel
entryRuleMainModel
:
{ before(grammarAccess.getMainModelRule()); }
	 ruleMainModel
{ after(grammarAccess.getMainModelRule()); } 
	 EOF 
;

// Rule MainModel
ruleMainModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMainModelAccess().getGroup()); }
		(rule__MainModel__Group__0)
		{ after(grammarAccess.getMainModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleImportModel
entryRuleImportModel
:
{ before(grammarAccess.getImportModelRule()); }
	 ruleImportModel
{ after(grammarAccess.getImportModelRule()); } 
	 EOF 
;

// Rule ImportModel
ruleImportModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImportModelAccess().getGroup()); }
		(rule__ImportModel__Group__0)
		{ after(grammarAccess.getImportModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleImport
entryRuleImport
:
{ before(grammarAccess.getImportRule()); }
	 ruleImport
{ after(grammarAccess.getImportRule()); } 
	 EOF 
;

// Rule Import
ruleImport 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImportAccess().getGroup()); }
		(rule__Import__Group__0)
		{ after(grammarAccess.getImportAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSentence
entryRuleSentence
:
{ before(grammarAccess.getSentenceRule()); }
	 ruleSentence
{ after(grammarAccess.getSentenceRule()); } 
	 EOF 
;

// Rule Sentence
ruleSentence 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSentenceAccess().getAlternatives()); }
		(rule__Sentence__Alternatives)
		{ after(grammarAccess.getSentenceAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRelation
entryRuleRelation
:
{ before(grammarAccess.getRelationRule()); }
	 ruleRelation
{ after(grammarAccess.getRelationRule()); } 
	 EOF 
;

// Rule Relation
ruleRelation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRelationAccess().getGroup()); }
		(rule__Relation__Group__0)
		{ after(grammarAccess.getRelationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAssignment
entryRuleAssignment
:
{ before(grammarAccess.getAssignmentRule()); }
	 ruleAssignment
{ after(grammarAccess.getAssignmentRule()); } 
	 EOF 
;

// Rule Assignment
ruleAssignment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAssignmentAccess().getGroup()); }
		(rule__Assignment__Group__0)
		{ after(grammarAccess.getAssignmentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleValue
entryRuleValue
:
{ before(grammarAccess.getValueRule()); }
	 ruleValue
{ after(grammarAccess.getValueRule()); } 
	 EOF 
;

// Rule Value
ruleValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getValueAccess().getAlternatives()); }
		(rule__Value__Alternatives)
		{ after(grammarAccess.getValueAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFreeIndividual
entryRuleFreeIndividual
:
{ before(grammarAccess.getFreeIndividualRule()); }
	 ruleFreeIndividual
{ after(grammarAccess.getFreeIndividualRule()); } 
	 EOF 
;

// Rule FreeIndividual
ruleFreeIndividual 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFreeIndividualAccess().getGroup()); }
		(rule__FreeIndividual__Group__0)
		{ after(grammarAccess.getFreeIndividualAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleObjectProperty
entryRuleObjectProperty
:
{ before(grammarAccess.getObjectPropertyRule()); }
	 ruleObjectProperty
{ after(grammarAccess.getObjectPropertyRule()); } 
	 EOF 
;

// Rule ObjectProperty
ruleObjectProperty 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getObjectPropertyAccess().getGroup()); }
		(rule__ObjectProperty__Group__0)
		{ after(grammarAccess.getObjectPropertyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCharacteristic
entryRuleCharacteristic
:
{ before(grammarAccess.getCharacteristicRule()); }
	 ruleCharacteristic
{ after(grammarAccess.getCharacteristicRule()); } 
	 EOF 
;

// Rule Characteristic
ruleCharacteristic 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCharacteristicAccess().getGroup()); }
		(rule__Characteristic__Group__0)
		{ after(grammarAccess.getCharacteristicAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStaticIndividual
entryRuleStaticIndividual
:
{ before(grammarAccess.getStaticIndividualRule()); }
	 ruleStaticIndividual
{ after(grammarAccess.getStaticIndividualRule()); } 
	 EOF 
;

// Rule StaticIndividual
ruleStaticIndividual 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStaticIndividualAccess().getGroup()); }
		(rule__StaticIndividual__Group__0)
		{ after(grammarAccess.getStaticIndividualAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getMainModelParserRuleCall_0()); }
		ruleMainModel
		{ after(grammarAccess.getModelAccess().getMainModelParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getModelAccess().getImportModelParserRuleCall_1()); }
		ruleImportModel
		{ after(grammarAccess.getModelAccess().getImportModelParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sentence__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSentenceAccess().getRelationParserRuleCall_0()); }
		ruleRelation
		{ after(grammarAccess.getSentenceAccess().getRelationParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getSentenceAccess().getAssignmentParserRuleCall_1()); }
		ruleAssignment
		{ after(grammarAccess.getSentenceAccess().getAssignmentParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueAccess().getGroup_0()); }
		(rule__Value__Group_0__0)
		{ after(grammarAccess.getValueAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getValueAccess().getGroup_1()); }
		(rule__Value__Group_1__0)
		{ after(grammarAccess.getValueAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getValueAccess().getGroup_2()); }
		(rule__Value__Group_2__0)
		{ after(grammarAccess.getValueAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getValueAccess().getGroup_3()); }
		(rule__Value__Group_3__0)
		{ after(grammarAccess.getValueAccess().getGroup_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MainModel__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MainModel__Group__0__Impl
	rule__MainModel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MainModel__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getMainModelAccess().getImportsAssignment_0()); }
		(rule__MainModel__ImportsAssignment_0)
		{ after(grammarAccess.getMainModelAccess().getImportsAssignment_0()); }
	)
	(
		{ before(grammarAccess.getMainModelAccess().getImportsAssignment_0()); }
		(rule__MainModel__ImportsAssignment_0)*
		{ after(grammarAccess.getMainModelAccess().getImportsAssignment_0()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MainModel__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MainModel__Group__1__Impl
	rule__MainModel__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MainModel__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMainModelAccess().getGroup_1()); }
	(rule__MainModel__Group_1__0)?
	{ after(grammarAccess.getMainModelAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MainModel__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MainModel__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MainModel__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMainModelAccess().getSentencesAssignment_2()); }
	(rule__MainModel__SentencesAssignment_2)*
	{ after(grammarAccess.getMainModelAccess().getSentencesAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MainModel__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MainModel__Group_1__0__Impl
	rule__MainModel__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MainModel__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMainModelAccess().getUseKeyword_1_0()); }
	'use'
	{ after(grammarAccess.getMainModelAccess().getUseKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MainModel__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MainModel__Group_1__1__Impl
	rule__MainModel__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MainModel__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMainModelAccess().getUseChAssignment_1_1()); }
	(rule__MainModel__UseChAssignment_1_1)
	{ after(grammarAccess.getMainModelAccess().getUseChAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MainModel__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MainModel__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MainModel__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMainModelAccess().getGroup_1_2()); }
	(rule__MainModel__Group_1_2__0)*
	{ after(grammarAccess.getMainModelAccess().getGroup_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MainModel__Group_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MainModel__Group_1_2__0__Impl
	rule__MainModel__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MainModel__Group_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMainModelAccess().getCommaKeyword_1_2_0()); }
	','
	{ after(grammarAccess.getMainModelAccess().getCommaKeyword_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MainModel__Group_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MainModel__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MainModel__Group_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMainModelAccess().getUseChAssignment_1_2_1()); }
	(rule__MainModel__UseChAssignment_1_2_1)
	{ after(grammarAccess.getMainModelAccess().getUseChAssignment_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ImportModel__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportModel__Group__0__Impl
	rule__ImportModel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportModel__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getImportModelAccess().getStaticIndividualsAssignment_0()); }
		(rule__ImportModel__StaticIndividualsAssignment_0)
		{ after(grammarAccess.getImportModelAccess().getStaticIndividualsAssignment_0()); }
	)
	(
		{ before(grammarAccess.getImportModelAccess().getStaticIndividualsAssignment_0()); }
		(rule__ImportModel__StaticIndividualsAssignment_0)*
		{ after(grammarAccess.getImportModelAccess().getStaticIndividualsAssignment_0()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportModel__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportModel__Group__1__Impl
	rule__ImportModel__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportModel__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportModelAccess().getIndividualOptionsAssignment_1()); }
	(rule__ImportModel__IndividualOptionsAssignment_1)*
	{ after(grammarAccess.getImportModelAccess().getIndividualOptionsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportModel__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportModel__Group__2__Impl
	rule__ImportModel__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportModel__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportModelAccess().getCharacteristicsAssignment_2()); }
	(rule__ImportModel__CharacteristicsAssignment_2)*
	{ after(grammarAccess.getImportModelAccess().getCharacteristicsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportModel__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportModel__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportModel__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportModelAccess().getObjectPropertiesAssignment_3()); }
	(rule__ImportModel__ObjectPropertiesAssignment_3)*
	{ after(grammarAccess.getImportModelAccess().getObjectPropertiesAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Import__Group__0__Impl
	rule__Import__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportAccess().getImportKeyword_0()); }
	'import'
	{ after(grammarAccess.getImportAccess().getImportKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Import__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportAccess().getNameAssignment_1()); }
	(rule__Import__NameAssignment_1)
	{ after(grammarAccess.getImportAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Relation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relation__Group__0__Impl
	rule__Relation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationAccess().getInd1Assignment_0()); }
	(rule__Relation__Ind1Assignment_0)
	{ after(grammarAccess.getRelationAccess().getInd1Assignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relation__Group__1__Impl
	rule__Relation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationAccess().getObjAssignment_1()); }
	(rule__Relation__ObjAssignment_1)
	{ after(grammarAccess.getRelationAccess().getObjAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relation__Group__2__Impl
	rule__Relation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationAccess().getInd2Assignment_2()); }
	(rule__Relation__Ind2Assignment_2)
	{ after(grammarAccess.getRelationAccess().getInd2Assignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relation__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationAccess().getGroup_3()); }
	(rule__Relation__Group_3__0)*
	{ after(grammarAccess.getRelationAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Relation__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relation__Group_3__0__Impl
	rule__Relation__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationAccess().getCommaKeyword_3_0()); }
	','
	{ after(grammarAccess.getRelationAccess().getCommaKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relation__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationAccess().getInd2Assignment_3_1()); }
	(rule__Relation__Ind2Assignment_3_1)
	{ after(grammarAccess.getRelationAccess().getInd2Assignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment__Group__0__Impl
	rule__Assignment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentAccess().getIndAssignment_0()); }
	(rule__Assignment__IndAssignment_0)
	{ after(grammarAccess.getAssignmentAccess().getIndAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment__Group__1__Impl
	rule__Assignment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getAssignmentAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentAccess().getLiteralAssignment_2()); }
	(rule__Assignment__LiteralAssignment_2)
	{ after(grammarAccess.getAssignmentAccess().getLiteralAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Value__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Value__Group_0__0__Impl
	rule__Value__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueAccess().getFloatValAction_0_0()); }
	()
	{ after(grammarAccess.getValueAccess().getFloatValAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Value__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueAccess().getValAssignment_0_1()); }
	(rule__Value__ValAssignment_0_1)
	{ after(grammarAccess.getValueAccess().getValAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Value__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Value__Group_1__0__Impl
	rule__Value__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueAccess().getBoolValAction_1_0()); }
	()
	{ after(grammarAccess.getValueAccess().getBoolValAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Value__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueAccess().getValAssignment_1_1()); }
	(rule__Value__ValAssignment_1_1)
	{ after(grammarAccess.getValueAccess().getValAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Value__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Value__Group_2__0__Impl
	rule__Value__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueAccess().getIntValAction_2_0()); }
	()
	{ after(grammarAccess.getValueAccess().getIntValAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Value__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueAccess().getValAssignment_2_1()); }
	(rule__Value__ValAssignment_2_1)
	{ after(grammarAccess.getValueAccess().getValAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Value__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Value__Group_3__0__Impl
	rule__Value__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueAccess().getStringValAction_3_0()); }
	()
	{ after(grammarAccess.getValueAccess().getStringValAction_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Value__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueAccess().getValAssignment_3_1()); }
	(rule__Value__ValAssignment_3_1)
	{ after(grammarAccess.getValueAccess().getValAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FreeIndividual__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FreeIndividual__Group__0__Impl
	rule__FreeIndividual__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FreeIndividual__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFreeIndividualAccess().getFreeIndividualKeyword_0()); }
	'FreeIndividual'
	{ after(grammarAccess.getFreeIndividualAccess().getFreeIndividualKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FreeIndividual__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FreeIndividual__Group__1__Impl
	rule__FreeIndividual__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FreeIndividual__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFreeIndividualAccess().getNameAssignment_1()); }
	(rule__FreeIndividual__NameAssignment_1)
	{ after(grammarAccess.getFreeIndividualAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FreeIndividual__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FreeIndividual__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FreeIndividual__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFreeIndividualAccess().getIriAssignment_2()); }
	(rule__FreeIndividual__IriAssignment_2)
	{ after(grammarAccess.getFreeIndividualAccess().getIriAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectProperty__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectProperty__Group__0__Impl
	rule__ObjectProperty__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectProperty__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectPropertyAccess().getObjectPropertyKeyword_0()); }
	'ObjectProperty'
	{ after(grammarAccess.getObjectPropertyAccess().getObjectPropertyKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectProperty__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectProperty__Group__1__Impl
	rule__ObjectProperty__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectProperty__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectPropertyAccess().getNameAssignment_1()); }
	(rule__ObjectProperty__NameAssignment_1)
	{ after(grammarAccess.getObjectPropertyAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectProperty__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectProperty__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectProperty__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectPropertyAccess().getIriAssignment_2()); }
	(rule__ObjectProperty__IriAssignment_2)
	{ after(grammarAccess.getObjectPropertyAccess().getIriAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Characteristic__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Characteristic__Group__0__Impl
	rule__Characteristic__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Characteristic__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCharacteristicAccess().getCharacteristicKeyword_0()); }
	'Characteristic'
	{ after(grammarAccess.getCharacteristicAccess().getCharacteristicKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Characteristic__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Characteristic__Group__1__Impl
	rule__Characteristic__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Characteristic__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCharacteristicAccess().getNameAssignment_1()); }
	(rule__Characteristic__NameAssignment_1)
	{ after(grammarAccess.getCharacteristicAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Characteristic__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Characteristic__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Characteristic__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCharacteristicAccess().getIriAssignment_2()); }
	(rule__Characteristic__IriAssignment_2)
	{ after(grammarAccess.getCharacteristicAccess().getIriAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StaticIndividual__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StaticIndividual__Group__0__Impl
	rule__StaticIndividual__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticIndividual__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStaticIndividualAccess().getStaticIndividualKeyword_0()); }
	'StaticIndividual'
	{ after(grammarAccess.getStaticIndividualAccess().getStaticIndividualKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticIndividual__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StaticIndividual__Group__1__Impl
	rule__StaticIndividual__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticIndividual__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStaticIndividualAccess().getNameAssignment_1()); }
	(rule__StaticIndividual__NameAssignment_1)
	{ after(grammarAccess.getStaticIndividualAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticIndividual__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StaticIndividual__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticIndividual__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStaticIndividualAccess().getIriAssignment_2()); }
	(rule__StaticIndividual__IriAssignment_2)
	{ after(grammarAccess.getStaticIndividualAccess().getIriAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MainModel__ImportsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMainModelAccess().getImportsImportParserRuleCall_0_0()); }
		ruleImport
		{ after(grammarAccess.getMainModelAccess().getImportsImportParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MainModel__UseChAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMainModelAccess().getUseChCharacteristicCrossReference_1_1_0()); }
		(
			{ before(grammarAccess.getMainModelAccess().getUseChCharacteristicALIASTerminalRuleCall_1_1_0_1()); }
			RULE_ALIAS
			{ after(grammarAccess.getMainModelAccess().getUseChCharacteristicALIASTerminalRuleCall_1_1_0_1()); }
		)
		{ after(grammarAccess.getMainModelAccess().getUseChCharacteristicCrossReference_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MainModel__UseChAssignment_1_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMainModelAccess().getUseChCharacteristicCrossReference_1_2_1_0()); }
		(
			{ before(grammarAccess.getMainModelAccess().getUseChCharacteristicALIASTerminalRuleCall_1_2_1_0_1()); }
			RULE_ALIAS
			{ after(grammarAccess.getMainModelAccess().getUseChCharacteristicALIASTerminalRuleCall_1_2_1_0_1()); }
		)
		{ after(grammarAccess.getMainModelAccess().getUseChCharacteristicCrossReference_1_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MainModel__SentencesAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMainModelAccess().getSentencesSentenceParserRuleCall_2_0()); }
		ruleSentence
		{ after(grammarAccess.getMainModelAccess().getSentencesSentenceParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportModel__StaticIndividualsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportModelAccess().getStaticIndividualsStaticIndividualParserRuleCall_0_0()); }
		ruleStaticIndividual
		{ after(grammarAccess.getImportModelAccess().getStaticIndividualsStaticIndividualParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportModel__IndividualOptionsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportModelAccess().getIndividualOptionsFreeIndividualParserRuleCall_1_0()); }
		ruleFreeIndividual
		{ after(grammarAccess.getImportModelAccess().getIndividualOptionsFreeIndividualParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportModel__CharacteristicsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportModelAccess().getCharacteristicsCharacteristicParserRuleCall_2_0()); }
		ruleCharacteristic
		{ after(grammarAccess.getImportModelAccess().getCharacteristicsCharacteristicParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportModel__ObjectPropertiesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportModelAccess().getObjectPropertiesObjectPropertyParserRuleCall_3_0()); }
		ruleObjectProperty
		{ after(grammarAccess.getImportModelAccess().getObjectPropertiesObjectPropertyParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportAccess().getNameSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getImportAccess().getNameSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Ind1Assignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationAccess().getInd1IndividualCrossReference_0_0()); }
		(
			{ before(grammarAccess.getRelationAccess().getInd1IndividualALIASTerminalRuleCall_0_0_1()); }
			RULE_ALIAS
			{ after(grammarAccess.getRelationAccess().getInd1IndividualALIASTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getRelationAccess().getInd1IndividualCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__ObjAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationAccess().getObjObjectPropertyCrossReference_1_0()); }
		(
			{ before(grammarAccess.getRelationAccess().getObjObjectPropertyALIASTerminalRuleCall_1_0_1()); }
			RULE_ALIAS
			{ after(grammarAccess.getRelationAccess().getObjObjectPropertyALIASTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getRelationAccess().getObjObjectPropertyCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Ind2Assignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationAccess().getInd2IndividualCrossReference_2_0()); }
		(
			{ before(grammarAccess.getRelationAccess().getInd2IndividualALIASTerminalRuleCall_2_0_1()); }
			RULE_ALIAS
			{ after(grammarAccess.getRelationAccess().getInd2IndividualALIASTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getRelationAccess().getInd2IndividualCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Ind2Assignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationAccess().getInd2IndividualCrossReference_3_1_0()); }
		(
			{ before(grammarAccess.getRelationAccess().getInd2IndividualALIASTerminalRuleCall_3_1_0_1()); }
			RULE_ALIAS
			{ after(grammarAccess.getRelationAccess().getInd2IndividualALIASTerminalRuleCall_3_1_0_1()); }
		)
		{ after(grammarAccess.getRelationAccess().getInd2IndividualCrossReference_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__IndAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignmentAccess().getIndIndividualCrossReference_0_0()); }
		(
			{ before(grammarAccess.getAssignmentAccess().getIndIndividualALIASTerminalRuleCall_0_0_1()); }
			RULE_ALIAS
			{ after(grammarAccess.getAssignmentAccess().getIndIndividualALIASTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getAssignmentAccess().getIndIndividualCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__LiteralAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignmentAccess().getLiteralValueParserRuleCall_2_0()); }
		ruleValue
		{ after(grammarAccess.getAssignmentAccess().getLiteralValueParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__ValAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueAccess().getValFLOATTerminalRuleCall_0_1_0()); }
		RULE_FLOAT
		{ after(grammarAccess.getValueAccess().getValFLOATTerminalRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__ValAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueAccess().getValBOOLTerminalRuleCall_1_1_0()); }
		RULE_BOOL
		{ after(grammarAccess.getValueAccess().getValBOOLTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__ValAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueAccess().getValINTTerminalRuleCall_2_1_0()); }
		RULE_INT
		{ after(grammarAccess.getValueAccess().getValINTTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__ValAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueAccess().getValSTRINGTerminalRuleCall_3_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getValueAccess().getValSTRINGTerminalRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FreeIndividual__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFreeIndividualAccess().getNameALIASTerminalRuleCall_1_0()); }
		RULE_ALIAS
		{ after(grammarAccess.getFreeIndividualAccess().getNameALIASTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FreeIndividual__IriAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFreeIndividualAccess().getIriSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getFreeIndividualAccess().getIriSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectProperty__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjectPropertyAccess().getNameALIASTerminalRuleCall_1_0()); }
		RULE_ALIAS
		{ after(grammarAccess.getObjectPropertyAccess().getNameALIASTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectProperty__IriAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjectPropertyAccess().getIriSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getObjectPropertyAccess().getIriSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Characteristic__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCharacteristicAccess().getNameALIASTerminalRuleCall_1_0()); }
		RULE_ALIAS
		{ after(grammarAccess.getCharacteristicAccess().getNameALIASTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Characteristic__IriAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCharacteristicAccess().getIriSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getCharacteristicAccess().getIriSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticIndividual__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStaticIndividualAccess().getNameALIASTerminalRuleCall_1_0()); }
		RULE_ALIAS
		{ after(grammarAccess.getStaticIndividualAccess().getNameALIASTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticIndividual__IriAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStaticIndividualAccess().getIriSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getStaticIndividualAccess().getIriSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_FLOAT : RULE_INT '.' ('0'..'9')+ (('e'|'E') RULE_INT)?;

RULE_BOOL : ('true'|'false');

RULE_INT : '-'? ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_ALIAS : '-'? ('A'..'Z'|'a'..'z'|'*'|'_'|'.') ('A'..'Z'|'a'..'z'|'0'..'9'|'-'|'*'|'_'|'.')*;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
