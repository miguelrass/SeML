/*
 * generated by Xtext 2.10.0
 */
grammar InternalSeML;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtext.seml.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.seml.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.seml.services.SeMLGrammarAccess;

}
@parser::members {
	private SeMLGrammarAccess grammarAccess;

	public void setGrammarAccess(SeMLGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getAlternatives()); }
		(rule__Model__Alternatives)
		{ after(grammarAccess.getModelAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMainModel
entryRuleMainModel
:
{ before(grammarAccess.getMainModelRule()); }
	 ruleMainModel
{ after(grammarAccess.getMainModelRule()); } 
	 EOF 
;

// Rule MainModel
ruleMainModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMainModelAccess().getGroup()); }
		(rule__MainModel__Group__0)
		{ after(grammarAccess.getMainModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleImportModel
entryRuleImportModel
:
{ before(grammarAccess.getImportModelRule()); }
	 ruleImportModel
{ after(grammarAccess.getImportModelRule()); } 
	 EOF 
;

// Rule ImportModel
ruleImportModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImportModelAccess().getGroup()); }
		(rule__ImportModel__Group__0)
		{ after(grammarAccess.getImportModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleImport
entryRuleImport
:
{ before(grammarAccess.getImportRule()); }
	 ruleImport
{ after(grammarAccess.getImportRule()); } 
	 EOF 
;

// Rule Import
ruleImport 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImportAccess().getGroup()); }
		(rule__Import__Group__0)
		{ after(grammarAccess.getImportAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSentence
entryRuleSentence
:
{ before(grammarAccess.getSentenceRule()); }
	 ruleSentence
{ after(grammarAccess.getSentenceRule()); } 
	 EOF 
;

// Rule Sentence
ruleSentence 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSentenceAccess().getAlternatives()); }
		(rule__Sentence__Alternatives)
		{ after(grammarAccess.getSentenceAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIndividual
entryRuleIndividual
:
{ before(grammarAccess.getIndividualRule()); }
	 ruleIndividual
{ after(grammarAccess.getIndividualRule()); } 
	 EOF 
;

// Rule Individual
ruleIndividual 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIndividualAccess().getGroup()); }
		(rule__Individual__Group__0)
		{ after(grammarAccess.getIndividualAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUseCharacteristic
entryRuleUseCharacteristic
:
{ before(grammarAccess.getUseCharacteristicRule()); }
	 ruleUseCharacteristic
{ after(grammarAccess.getUseCharacteristicRule()); } 
	 EOF 
;

// Rule UseCharacteristic
ruleUseCharacteristic 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUseCharacteristicAccess().getGroup()); }
		(rule__UseCharacteristic__Group__0)
		{ after(grammarAccess.getUseCharacteristicAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRelation
entryRuleRelation
:
{ before(grammarAccess.getRelationRule()); }
	 ruleRelation
{ after(grammarAccess.getRelationRule()); } 
	 EOF 
;

// Rule Relation
ruleRelation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRelationAccess().getGroup()); }
		(rule__Relation__Group__0)
		{ after(grammarAccess.getRelationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComponent
entryRuleComponent
:
{ before(grammarAccess.getComponentRule()); }
	 ruleComponent
{ after(grammarAccess.getComponentRule()); } 
	 EOF 
;

// Rule Component
ruleComponent 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComponentAccess().getAlternatives()); }
		(rule__Component__Alternatives)
		{ after(grammarAccess.getComponentAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComponent_Process
entryRuleComponent_Process
:
{ before(grammarAccess.getComponent_ProcessRule()); }
	 ruleComponent_Process
{ after(grammarAccess.getComponent_ProcessRule()); } 
	 EOF 
;

// Rule Component_Process
ruleComponent_Process 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComponent_ProcessAccess().getGroup()); }
		(rule__Component_Process__Group__0)
		{ after(grammarAccess.getComponent_ProcessAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComponent_Event
entryRuleComponent_Event
:
{ before(grammarAccess.getComponent_EventRule()); }
	 ruleComponent_Event
{ after(grammarAccess.getComponent_EventRule()); } 
	 EOF 
;

// Rule Component_Event
ruleComponent_Event 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComponent_EventAccess().getGroup()); }
		(rule__Component_Event__Group__0)
		{ after(grammarAccess.getComponent_EventAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComponent_Property
entryRuleComponent_Property
:
{ before(grammarAccess.getComponent_PropertyRule()); }
	 ruleComponent_Property
{ after(grammarAccess.getComponent_PropertyRule()); } 
	 EOF 
;

// Rule Component_Property
ruleComponent_Property 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComponent_PropertyAccess().getGroup()); }
		(rule__Component_Property__Group__0)
		{ after(grammarAccess.getComponent_PropertyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComponent_Entity
entryRuleComponent_Entity
:
{ before(grammarAccess.getComponent_EntityRule()); }
	 ruleComponent_Entity
{ after(grammarAccess.getComponent_EntityRule()); } 
	 EOF 
;

// Rule Component_Entity
ruleComponent_Entity 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComponent_EntityAccess().getGroup()); }
		(rule__Component_Entity__Group__0)
		{ after(grammarAccess.getComponent_EntityAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleObjectProperty
entryRuleObjectProperty
:
{ before(grammarAccess.getObjectPropertyRule()); }
	 ruleObjectProperty
{ after(grammarAccess.getObjectPropertyRule()); } 
	 EOF 
;

// Rule ObjectProperty
ruleObjectProperty 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getObjectPropertyAccess().getGroup()); }
		(rule__ObjectProperty__Group__0)
		{ after(grammarAccess.getObjectPropertyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCharacteristic
entryRuleCharacteristic
:
{ before(grammarAccess.getCharacteristicRule()); }
	 ruleCharacteristic
{ after(grammarAccess.getCharacteristicRule()); } 
	 EOF 
;

// Rule Characteristic
ruleCharacteristic 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCharacteristicAccess().getGroup()); }
		(rule__Characteristic__Group__0)
		{ after(grammarAccess.getCharacteristicAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMetaIndividual
entryRuleMetaIndividual
:
{ before(grammarAccess.getMetaIndividualRule()); }
	 ruleMetaIndividual
{ after(grammarAccess.getMetaIndividualRule()); } 
	 EOF 
;

// Rule MetaIndividual
ruleMetaIndividual 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMetaIndividualAccess().getGroup()); }
		(rule__MetaIndividual__Group__0)
		{ after(grammarAccess.getMetaIndividualAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getMainModelParserRuleCall_0()); }
		ruleMainModel
		{ after(grammarAccess.getModelAccess().getMainModelParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getModelAccess().getImportModelParserRuleCall_1()); }
		ruleImportModel
		{ after(grammarAccess.getModelAccess().getImportModelParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sentence__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSentenceAccess().getIndividualParserRuleCall_0()); }
		ruleIndividual
		{ after(grammarAccess.getSentenceAccess().getIndividualParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getSentenceAccess().getRelationParserRuleCall_1()); }
		ruleRelation
		{ after(grammarAccess.getSentenceAccess().getRelationParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getSentenceAccess().getUseCharacteristicParserRuleCall_2()); }
		ruleUseCharacteristic
		{ after(grammarAccess.getSentenceAccess().getUseCharacteristicParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponentAccess().getComponent_ProcessParserRuleCall_0()); }
		ruleComponent_Process
		{ after(grammarAccess.getComponentAccess().getComponent_ProcessParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getComponentAccess().getComponent_EventParserRuleCall_1()); }
		ruleComponent_Event
		{ after(grammarAccess.getComponentAccess().getComponent_EventParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getComponentAccess().getComponent_PropertyParserRuleCall_2()); }
		ruleComponent_Property
		{ after(grammarAccess.getComponentAccess().getComponent_PropertyParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getComponentAccess().getComponent_EntityParserRuleCall_3()); }
		ruleComponent_Entity
		{ after(grammarAccess.getComponentAccess().getComponent_EntityParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MainModel__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MainModel__Group__0__Impl
	rule__MainModel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MainModel__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getMainModelAccess().getImportsAssignment_0()); }
		(rule__MainModel__ImportsAssignment_0)
		{ after(grammarAccess.getMainModelAccess().getImportsAssignment_0()); }
	)
	(
		{ before(grammarAccess.getMainModelAccess().getImportsAssignment_0()); }
		(rule__MainModel__ImportsAssignment_0)*
		{ after(grammarAccess.getMainModelAccess().getImportsAssignment_0()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MainModel__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MainModel__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MainModel__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMainModelAccess().getSentencesAssignment_1()); }
	(rule__MainModel__SentencesAssignment_1)*
	{ after(grammarAccess.getMainModelAccess().getSentencesAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ImportModel__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportModel__Group__0__Impl
	rule__ImportModel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportModel__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getImportModelAccess().getComponentsAssignment_0()); }
		(rule__ImportModel__ComponentsAssignment_0)
		{ after(grammarAccess.getImportModelAccess().getComponentsAssignment_0()); }
	)
	(
		{ before(grammarAccess.getImportModelAccess().getComponentsAssignment_0()); }
		(rule__ImportModel__ComponentsAssignment_0)*
		{ after(grammarAccess.getImportModelAccess().getComponentsAssignment_0()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportModel__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportModel__Group__1__Impl
	rule__ImportModel__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportModel__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportModelAccess().getCharacteristicsAssignment_1()); }
	(rule__ImportModel__CharacteristicsAssignment_1)*
	{ after(grammarAccess.getImportModelAccess().getCharacteristicsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportModel__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportModel__Group__2__Impl
	rule__ImportModel__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportModel__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportModelAccess().getObjectPropertiesAssignment_2()); }
	(rule__ImportModel__ObjectPropertiesAssignment_2)*
	{ after(grammarAccess.getImportModelAccess().getObjectPropertiesAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportModel__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportModel__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportModel__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportModelAccess().getMetaIndividualsAssignment_3()); }
	(rule__ImportModel__MetaIndividualsAssignment_3)*
	{ after(grammarAccess.getImportModelAccess().getMetaIndividualsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Import__Group__0__Impl
	rule__Import__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportAccess().getImportKeyword_0()); }
	'import'
	{ after(grammarAccess.getImportAccess().getImportKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Import__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportAccess().getNameAssignment_1()); }
	(rule__Import__NameAssignment_1)
	{ after(grammarAccess.getImportAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Individual__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Individual__Group__0__Impl
	rule__Individual__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Individual__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndividualAccess().getNewKeyword_0()); }
	'new'
	{ after(grammarAccess.getIndividualAccess().getNewKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Individual__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Individual__Group__1__Impl
	rule__Individual__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Individual__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndividualAccess().getClsAssignment_1()); }
	(rule__Individual__ClsAssignment_1)
	{ after(grammarAccess.getIndividualAccess().getClsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Individual__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Individual__Group__2__Impl
	rule__Individual__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Individual__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndividualAccess().getGroup_2()); }
	(rule__Individual__Group_2__0)*
	{ after(grammarAccess.getIndividualAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Individual__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Individual__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Individual__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndividualAccess().getNameAssignment_3()); }
	(rule__Individual__NameAssignment_3)
	{ after(grammarAccess.getIndividualAccess().getNameAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Individual__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Individual__Group_2__0__Impl
	rule__Individual__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Individual__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndividualAccess().getCommaKeyword_2_0()); }
	','
	{ after(grammarAccess.getIndividualAccess().getCommaKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Individual__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Individual__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Individual__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndividualAccess().getClsAssignment_2_1()); }
	(rule__Individual__ClsAssignment_2_1)
	{ after(grammarAccess.getIndividualAccess().getClsAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UseCharacteristic__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UseCharacteristic__Group__0__Impl
	rule__UseCharacteristic__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UseCharacteristic__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUseCharacteristicAccess().getUseKeyword_0()); }
	'use'
	{ after(grammarAccess.getUseCharacteristicAccess().getUseKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UseCharacteristic__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UseCharacteristic__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UseCharacteristic__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUseCharacteristicAccess().getNameAssignment_1()); }
	(rule__UseCharacteristic__NameAssignment_1)
	{ after(grammarAccess.getUseCharacteristicAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Relation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relation__Group__0__Impl
	rule__Relation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationAccess().getInstance1Assignment_0()); }
	(rule__Relation__Instance1Assignment_0)
	{ after(grammarAccess.getRelationAccess().getInstance1Assignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relation__Group__1__Impl
	rule__Relation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationAccess().getObjAssignment_1()); }
	(rule__Relation__ObjAssignment_1)
	{ after(grammarAccess.getRelationAccess().getObjAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relation__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationAccess().getInstance2Assignment_2()); }
	(rule__Relation__Instance2Assignment_2)
	{ after(grammarAccess.getRelationAccess().getInstance2Assignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Component_Process__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Component_Process__Group__0__Impl
	rule__Component_Process__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Component_Process__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponent_ProcessAccess().getCompProcessKeyword_0()); }
	'CompProcess'
	{ after(grammarAccess.getComponent_ProcessAccess().getCompProcessKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component_Process__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Component_Process__Group__1__Impl
	rule__Component_Process__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Component_Process__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponent_ProcessAccess().getNameAssignment_1()); }
	(rule__Component_Process__NameAssignment_1)
	{ after(grammarAccess.getComponent_ProcessAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component_Process__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Component_Process__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Component_Process__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponent_ProcessAccess().getIriAssignment_2()); }
	(rule__Component_Process__IriAssignment_2)
	{ after(grammarAccess.getComponent_ProcessAccess().getIriAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Component_Event__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Component_Event__Group__0__Impl
	rule__Component_Event__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Component_Event__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponent_EventAccess().getCompEventKeyword_0()); }
	'CompEvent'
	{ after(grammarAccess.getComponent_EventAccess().getCompEventKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component_Event__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Component_Event__Group__1__Impl
	rule__Component_Event__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Component_Event__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponent_EventAccess().getNameAssignment_1()); }
	(rule__Component_Event__NameAssignment_1)
	{ after(grammarAccess.getComponent_EventAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component_Event__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Component_Event__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Component_Event__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponent_EventAccess().getIriAssignment_2()); }
	(rule__Component_Event__IriAssignment_2)
	{ after(grammarAccess.getComponent_EventAccess().getIriAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Component_Property__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Component_Property__Group__0__Impl
	rule__Component_Property__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Component_Property__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponent_PropertyAccess().getCompPropertyKeyword_0()); }
	'CompProperty'
	{ after(grammarAccess.getComponent_PropertyAccess().getCompPropertyKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component_Property__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Component_Property__Group__1__Impl
	rule__Component_Property__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Component_Property__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponent_PropertyAccess().getNameAssignment_1()); }
	(rule__Component_Property__NameAssignment_1)
	{ after(grammarAccess.getComponent_PropertyAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component_Property__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Component_Property__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Component_Property__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponent_PropertyAccess().getIriAssignment_2()); }
	(rule__Component_Property__IriAssignment_2)
	{ after(grammarAccess.getComponent_PropertyAccess().getIriAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Component_Entity__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Component_Entity__Group__0__Impl
	rule__Component_Entity__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Component_Entity__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponent_EntityAccess().getCompEntityKeyword_0()); }
	'CompEntity'
	{ after(grammarAccess.getComponent_EntityAccess().getCompEntityKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component_Entity__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Component_Entity__Group__1__Impl
	rule__Component_Entity__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Component_Entity__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponent_EntityAccess().getNameAssignment_1()); }
	(rule__Component_Entity__NameAssignment_1)
	{ after(grammarAccess.getComponent_EntityAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component_Entity__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Component_Entity__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Component_Entity__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponent_EntityAccess().getIriAssignment_2()); }
	(rule__Component_Entity__IriAssignment_2)
	{ after(grammarAccess.getComponent_EntityAccess().getIriAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectProperty__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectProperty__Group__0__Impl
	rule__ObjectProperty__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectProperty__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectPropertyAccess().getObjectPropertyKeyword_0()); }
	'ObjectProperty'
	{ after(grammarAccess.getObjectPropertyAccess().getObjectPropertyKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectProperty__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectProperty__Group__1__Impl
	rule__ObjectProperty__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectProperty__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectPropertyAccess().getNameAssignment_1()); }
	(rule__ObjectProperty__NameAssignment_1)
	{ after(grammarAccess.getObjectPropertyAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectProperty__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectProperty__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectProperty__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectPropertyAccess().getIriAssignment_2()); }
	(rule__ObjectProperty__IriAssignment_2)
	{ after(grammarAccess.getObjectPropertyAccess().getIriAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Characteristic__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Characteristic__Group__0__Impl
	rule__Characteristic__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Characteristic__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCharacteristicAccess().getCharacteristicKeyword_0()); }
	'Characteristic'
	{ after(grammarAccess.getCharacteristicAccess().getCharacteristicKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Characteristic__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Characteristic__Group__1__Impl
	rule__Characteristic__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Characteristic__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCharacteristicAccess().getNameAssignment_1()); }
	(rule__Characteristic__NameAssignment_1)
	{ after(grammarAccess.getCharacteristicAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Characteristic__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Characteristic__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Characteristic__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCharacteristicAccess().getIriAssignment_2()); }
	(rule__Characteristic__IriAssignment_2)
	{ after(grammarAccess.getCharacteristicAccess().getIriAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MetaIndividual__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MetaIndividual__Group__0__Impl
	rule__MetaIndividual__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MetaIndividual__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMetaIndividualAccess().getMetaIndividualKeyword_0()); }
	'MetaIndividual'
	{ after(grammarAccess.getMetaIndividualAccess().getMetaIndividualKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MetaIndividual__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MetaIndividual__Group__1__Impl
	rule__MetaIndividual__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MetaIndividual__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getMetaIndividualAccess().getClsAssignment_1()); }
		(rule__MetaIndividual__ClsAssignment_1)
		{ after(grammarAccess.getMetaIndividualAccess().getClsAssignment_1()); }
	)
	(
		{ before(grammarAccess.getMetaIndividualAccess().getClsAssignment_1()); }
		(rule__MetaIndividual__ClsAssignment_1)*
		{ after(grammarAccess.getMetaIndividualAccess().getClsAssignment_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MetaIndividual__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MetaIndividual__Group__2__Impl
	rule__MetaIndividual__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MetaIndividual__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMetaIndividualAccess().getNameAssignment_2()); }
	(rule__MetaIndividual__NameAssignment_2)
	{ after(grammarAccess.getMetaIndividualAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MetaIndividual__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MetaIndividual__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MetaIndividual__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMetaIndividualAccess().getIriAssignment_3()); }
	(rule__MetaIndividual__IriAssignment_3)
	{ after(grammarAccess.getMetaIndividualAccess().getIriAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MainModel__ImportsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMainModelAccess().getImportsImportParserRuleCall_0_0()); }
		ruleImport
		{ after(grammarAccess.getMainModelAccess().getImportsImportParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MainModel__SentencesAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMainModelAccess().getSentencesSentenceParserRuleCall_1_0()); }
		ruleSentence
		{ after(grammarAccess.getMainModelAccess().getSentencesSentenceParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportModel__ComponentsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportModelAccess().getComponentsComponentParserRuleCall_0_0()); }
		ruleComponent
		{ after(grammarAccess.getImportModelAccess().getComponentsComponentParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportModel__CharacteristicsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportModelAccess().getCharacteristicsCharacteristicParserRuleCall_1_0()); }
		ruleCharacteristic
		{ after(grammarAccess.getImportModelAccess().getCharacteristicsCharacteristicParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportModel__ObjectPropertiesAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportModelAccess().getObjectPropertiesObjectPropertyParserRuleCall_2_0()); }
		ruleObjectProperty
		{ after(grammarAccess.getImportModelAccess().getObjectPropertiesObjectPropertyParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportModel__MetaIndividualsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportModelAccess().getMetaIndividualsMetaIndividualParserRuleCall_3_0()); }
		ruleMetaIndividual
		{ after(grammarAccess.getImportModelAccess().getMetaIndividualsMetaIndividualParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportAccess().getNameSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getImportAccess().getNameSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Individual__ClsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIndividualAccess().getClsComponentCrossReference_1_0()); }
		(
			{ before(grammarAccess.getIndividualAccess().getClsComponentIRITerminalRuleCall_1_0_1()); }
			RULE_IRI
			{ after(grammarAccess.getIndividualAccess().getClsComponentIRITerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getIndividualAccess().getClsComponentCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Individual__ClsAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIndividualAccess().getClsComponentCrossReference_2_1_0()); }
		(
			{ before(grammarAccess.getIndividualAccess().getClsComponentIRITerminalRuleCall_2_1_0_1()); }
			RULE_IRI
			{ after(grammarAccess.getIndividualAccess().getClsComponentIRITerminalRuleCall_2_1_0_1()); }
		)
		{ after(grammarAccess.getIndividualAccess().getClsComponentCrossReference_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Individual__NameAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIndividualAccess().getNameIRITerminalRuleCall_3_0()); }
		RULE_IRI
		{ after(grammarAccess.getIndividualAccess().getNameIRITerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UseCharacteristic__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUseCharacteristicAccess().getNameCharacteristicCrossReference_1_0()); }
		(
			{ before(grammarAccess.getUseCharacteristicAccess().getNameCharacteristicIRITerminalRuleCall_1_0_1()); }
			RULE_IRI
			{ after(grammarAccess.getUseCharacteristicAccess().getNameCharacteristicIRITerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getUseCharacteristicAccess().getNameCharacteristicCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Instance1Assignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationAccess().getInstance1AnyIndividualCrossReference_0_0()); }
		(
			{ before(grammarAccess.getRelationAccess().getInstance1AnyIndividualIRITerminalRuleCall_0_0_1()); }
			RULE_IRI
			{ after(grammarAccess.getRelationAccess().getInstance1AnyIndividualIRITerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getRelationAccess().getInstance1AnyIndividualCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__ObjAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationAccess().getObjObjectPropertyCrossReference_1_0()); }
		(
			{ before(grammarAccess.getRelationAccess().getObjObjectPropertyIRITerminalRuleCall_1_0_1()); }
			RULE_IRI
			{ after(grammarAccess.getRelationAccess().getObjObjectPropertyIRITerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getRelationAccess().getObjObjectPropertyCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Instance2Assignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationAccess().getInstance2AnyIndividualCrossReference_2_0()); }
		(
			{ before(grammarAccess.getRelationAccess().getInstance2AnyIndividualIRITerminalRuleCall_2_0_1()); }
			RULE_IRI
			{ after(grammarAccess.getRelationAccess().getInstance2AnyIndividualIRITerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getRelationAccess().getInstance2AnyIndividualCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component_Process__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponent_ProcessAccess().getNameIRITerminalRuleCall_1_0()); }
		RULE_IRI
		{ after(grammarAccess.getComponent_ProcessAccess().getNameIRITerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component_Process__IriAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponent_ProcessAccess().getIriSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getComponent_ProcessAccess().getIriSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component_Event__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponent_EventAccess().getNameIRITerminalRuleCall_1_0()); }
		RULE_IRI
		{ after(grammarAccess.getComponent_EventAccess().getNameIRITerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component_Event__IriAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponent_EventAccess().getIriSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getComponent_EventAccess().getIriSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component_Property__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponent_PropertyAccess().getNameIRITerminalRuleCall_1_0()); }
		RULE_IRI
		{ after(grammarAccess.getComponent_PropertyAccess().getNameIRITerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component_Property__IriAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponent_PropertyAccess().getIriSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getComponent_PropertyAccess().getIriSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component_Entity__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponent_EntityAccess().getNameIRITerminalRuleCall_1_0()); }
		RULE_IRI
		{ after(grammarAccess.getComponent_EntityAccess().getNameIRITerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component_Entity__IriAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponent_EntityAccess().getIriSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getComponent_EntityAccess().getIriSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectProperty__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjectPropertyAccess().getNameIRITerminalRuleCall_1_0()); }
		RULE_IRI
		{ after(grammarAccess.getObjectPropertyAccess().getNameIRITerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectProperty__IriAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjectPropertyAccess().getIriSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getObjectPropertyAccess().getIriSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Characteristic__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCharacteristicAccess().getNameIRITerminalRuleCall_1_0()); }
		RULE_IRI
		{ after(grammarAccess.getCharacteristicAccess().getNameIRITerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Characteristic__IriAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCharacteristicAccess().getIriSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getCharacteristicAccess().getIriSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MetaIndividual__ClsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMetaIndividualAccess().getClsSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getMetaIndividualAccess().getClsSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MetaIndividual__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMetaIndividualAccess().getNameIRITerminalRuleCall_2_0()); }
		RULE_IRI
		{ after(grammarAccess.getMetaIndividualAccess().getNameIRITerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MetaIndividual__IriAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMetaIndividualAccess().getIriSTRINGTerminalRuleCall_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getMetaIndividualAccess().getIriSTRINGTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_FLOAT : RULE_INT '.' RULE_INT (('e'|'E') RULE_INT)?;

RULE_BOOL : ('true'|'false');

fragment RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_IRI : ('#'|'&'..'+'|'-'..'.'|'0'..';'|'?'..'Z'|'a'..'z'|'_')+;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
